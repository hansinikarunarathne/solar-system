name: Solar System Workflow

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
              nodejs_version: [18,20]
              operating_system: [ubuntu-latest, macos-latest]
              exclude:
                - nodejs_version: 18
                  operating_system: macos-latest

        runs-on: ${{matrix.operating_system}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS version - ${{matrix.nodejs_version}}
          uses: actions/setup-node@v4
          with:
            node-version: ${{matrix.nodejs_version}}
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}

        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test

        - name: Archive Test Result
          if: always()
        #   if: failure() && steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success'
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result - ${{matrix.operating_system}}-${{matrix.nodejs_version}}
            path: test-results.xml

    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        steps:
                - name: Checkout Repository
                  uses: actions/checkout@v4
        
                - name: Setup NodeJS version - 18
                  uses: actions/setup-node@v4
                  with:
                    node-version: 18

                - name: Cache NPM dependencies
                  uses: actions/cache@v3
                  with:
                    path: node_modules
                    key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
        
                - name: Install Dependencies
                  run: npm install
        
                - name: Check COde Coverage
                  continue-on-error: true
                  run: npm run coverage
        
                - name: Archive Test Result
                  uses: actions/upload-artifact@v4
                  with:
                    name: Code-Coverage_Result
                    path: coverage
                    retention-days: 5

    
    docker:
        name: Containerization
        needs: [unit-testing,code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Docker Login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME}}
            password: ${{ secrets.DOCKERHUB_PASSWORD}}